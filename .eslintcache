[{"C:\\Users\\rromi\\sensors-data\\src\\index.js":"1","C:\\Users\\rromi\\sensors-data\\src\\App.js":"2","C:\\Users\\rromi\\sensors-data\\src\\components\\Map\\index.js":"3","C:\\Users\\rromi\\sensors-data\\src\\components\\Sensor\\index.js":"4","C:\\Users\\rromi\\sensors-data\\src\\components\\Sensor\\Chart\\index.js":"5","C:\\Users\\rromi\\sensors-data\\src\\components\\SensorsPanel\\index.js":"6","C:\\Users\\rromi\\sensors-data\\src\\components\\RequestEmailForm\\index.js":"7","C:\\Users\\rromi\\sensors-data\\src\\api\\index.js":"8","C:\\Users\\rromi\\sensors-data\\src\\helpers\\index.js":"9","C:\\Users\\rromi\\sensors-data\\src\\components\\Sensor\\Chart\\sandbox.js":"10","C:\\Users\\rromi\\sensors-data\\src\\components\\Loader\\index.js":"11"},{"size":219,"mtime":1611327614516,"results":"12","hashOfConfig":"13"},{"size":943,"mtime":1611339638028,"results":"14","hashOfConfig":"13"},{"size":2846,"mtime":1611339672911,"results":"15","hashOfConfig":"13"},{"size":1858,"mtime":1611336838771,"results":"16","hashOfConfig":"13"},{"size":958,"mtime":1611337872051,"results":"17","hashOfConfig":"13"},{"size":5275,"mtime":1611338588419,"results":"18","hashOfConfig":"13"},{"size":1882,"mtime":1611264532253,"results":"19","hashOfConfig":"13"},{"size":726,"mtime":1611274359844,"results":"20","hashOfConfig":"13"},{"size":634,"mtime":1611263867242,"results":"21","hashOfConfig":"13"},{"size":2000,"mtime":1611338572953,"results":"22","hashOfConfig":"13"},{"size":260,"mtime":1611338966140,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vczyyt",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\rromi\\sensors-data\\src\\index.js",[],"C:\\Users\\rromi\\sensors-data\\src\\App.js",[],"C:\\Users\\rromi\\sensors-data\\src\\components\\Map\\index.js",["51","52"],"C:\\Users\\rromi\\sensors-data\\src\\components\\Sensor\\index.js",[],["53","54"],"C:\\Users\\rromi\\sensors-data\\src\\components\\Sensor\\Chart\\index.js",["55","56","57","58"],"import { useEffect, useRef, useState } from \"react\";\r\nimport { destroyChart, renderChart, updateData } from \"./sandbox\";\r\n\r\nfunction Chart({ value, range, sendSensorData, id }) {\r\n  const interval = 6000;\r\n  const speed = 100;\r\n  const timeoutRef = useRef(null);\r\n  const realValue = useRef({ x: 0, y: 0, x: 0 });\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      timeoutRef.current = null;\r\n      updateData(id, realValue.current);\r\n      setRefresh(!refresh);\r\n      //sendSensorData(realValue.current);\r\n    }, speed);\r\n\r\n    return clearTimeout(timeoutRef.current);\r\n  }, [refresh]);\r\n\r\n  useEffect(() => {\r\n    realValue.current = value;\r\n  }, [value]);\r\n\r\n  useEffect(() => {\r\n    renderChart(id, range);\r\n\r\n    return () => destroyChart(id);\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ height: 170, width: \"100%\" }}>\r\n      <canvas id={id}></canvas>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","C:\\Users\\rromi\\sensors-data\\src\\components\\SensorsPanel\\index.js",["59"],"import React, { useEffect, useState } from \"react\";\r\nimport Sensor from \"../Sensor\";\r\nimport GraphIcon from \"./graph.svg\";\r\nimport { SendSensorData } from \"api\";\r\n\r\nconst SensorsPanel = () => {\r\n  const [showGraphs, setShowGraphs] = useState(true);\r\n  const [orientation, setOrientation] = useState({ alpha: 0, beta: 0, gamma: 0 });\r\n  const [acceleration, setAcceleration] = useState({ x: 0, y: 0, z: 0 });\r\n  const [accelerationIncludingGravity, setAccelerationIncludingGravity] = useState({\r\n    x: 0,\r\n    y: 0,\r\n    z: 0,\r\n  });\r\n  const [rotationRate, setRotationRate] = useState({ alpha: 0, beta: 0, gamma: 0 });\r\n\r\n  useEffect(() => {\r\n    const onDeviceMotion = (e) => {\r\n      setAcceleration((prev) =>\r\n        Object.assign({}, prev, {\r\n          x: e.acceleration.x || 0,\r\n          y: e.acceleration.y || 0,\r\n          z: e.acceleration.z || 0,\r\n        })\r\n      );\r\n      setAccelerationIncludingGravity((prev) =>\r\n        Object.assign({}, prev, {\r\n          x: e.accelerationIncludingGravity.x || 0,\r\n          y: e.accelerationIncludingGravity.y || 0,\r\n          z: e.accelerationIncludingGravity.z || 0,\r\n        })\r\n      );\r\n      setRotationRate((prev) =>\r\n        Object.assign({}, prev, {\r\n          alpha: e.rotationRate.alpha || 0,\r\n          beta: e.rotationRate.beta || 0,\r\n          gamma: e.rotationRate.gamma || 0,\r\n        })\r\n      );\r\n    };\r\n\r\n    const onDeviceOrientation = (e) => {\r\n      setOrientation((prev) =>\r\n        Object.assign({}, prev, { alpha: e.alpha || 0, beta: e.beta || 0, gamma: e.gamma || 0 })\r\n      );\r\n    };\r\n\r\n    if (showGraphs) {\r\n      window.addEventListener(\"devicemotion\", onDeviceMotion);\r\n      window.addEventListener(\"deviceorientation\", onDeviceOrientation);\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener(\"devicemotion\", onDeviceMotion);\r\n      window.removeEventListener(\"deviceorientation\", onDeviceOrientation);\r\n    };\r\n  }, [showGraphs]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        onClick={() => setShowGraphs(!showGraphs)}\r\n        className=\"user-select-none\"\r\n        style={{\r\n          position: \"fixed\",\r\n          zIndex: 100,\r\n          top: 5,\r\n          left: 0,\r\n          height: 42,\r\n          width: 100,\r\n          borderRadius: \"0 25px 25px 0\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          background: \"white\",\r\n          cursor: \"pointer\",\r\n          boxShadow: \"0px 0px 5px 2px rgba(0,0,0,0.1)\",\r\n        }}\r\n      >\r\n        <img src={GraphIcon}></img>\r\n      </div>\r\n      {showGraphs ? (\r\n        <React.Fragment>\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              pointerEvents: showGraphs ? \"all\" : \"none\",\r\n              transform: `translateX(${showGraphs ? 0 : \"-100%\"})`,\r\n              left: 0,\r\n              top: 0,\r\n              zIndex: \"99\",\r\n              width: \"100%\",\r\n              maxHeight: \"100%\",\r\n              overflow: \"auto\",\r\n              display: \"flex\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                paddingTop: 40,\r\n                boxSizing: \"border-box\",\r\n                borderRadius: \"8px\",\r\n                width: \"100%\",\r\n                zIndex: 99,\r\n                display: \"flex\",\r\n                flexWrap: \"wrap\",\r\n                padding: \"50px 10px 10px 10px\",\r\n              }}\r\n            >\r\n              <div style={{ padding: \"10px\", maxWidth: \"500px\", width: \"100%\" }}>\r\n                <Sensor\r\n                  id=\"orientation\"\r\n                  sendSensorData={SendSensorData}\r\n                  range={[-180, 360]}\r\n                  units={\"°\"}\r\n                  subject=\"Orientation\"\r\n                  value={{ x: orientation.beta, y: orientation.gamma, z: orientation.alpha }}\r\n                ></Sensor>\r\n              </div>\r\n              <div style={{ padding: \"10px\", maxWidth: \"500px\", width: \"100%\" }}>\r\n                <Sensor\r\n                  id=\"accelerometer\"\r\n                  sendSensorData={SendSensorData}\r\n                  range={[-10, 10]}\r\n                  subject=\"Accelerometer\"\r\n                  value={acceleration}\r\n                  units=\"m/s²\"\r\n                ></Sensor>\r\n              </div>\r\n              <div style={{ padding: \"10px\", maxWidth: \"500px\", width: \"100%\" }}>\r\n                <Sensor\r\n                  id=\"accelerometerIncludingGravity\"\r\n                  sendSensorData={SendSensorData}\r\n                  range={[-30, 30]}\r\n                  subject=\"Accelerometer including gravity\"\r\n                  value={accelerationIncludingGravity}\r\n                  units=\"m/s²\"\r\n                ></Sensor>\r\n              </div>\r\n              <div style={{ maxWidth: \"500px\", width: \"100%\", padding: \"10px\" }}>\r\n                <Sensor\r\n                  id=\"rotationRate\"\r\n                  sendSensorData={SendSensorData}\r\n                  range={[-220, 220]}\r\n                  subject=\"Gyroscope\"\r\n                  value={{ x: rotationRate.beta, y: rotationRate.gamma, z: rotationRate.alpha }}\r\n                ></Sensor>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SensorsPanel;\r\n","C:\\Users\\rromi\\sensors-data\\src\\components\\RequestEmailForm\\index.js",["60"],"import React, { useState } from \"react\";\r\nimport { GetSecureCookie } from \"api\";\r\nimport { setCookie } from \"helpers\";\r\n\r\nconst RequestEmailForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        zIndex: 999,\r\n        position: \"fixed\",\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        overflow: \"auto\",\r\n        background: `rgba(0,0,0,0.2)`,\r\n      }}\r\n    >\r\n      <form\r\n        style={{ background: \"white\", borderRadius: 8, padding: 30, maxWidth: 300 }}\r\n        onSubmit={async (e) => {\r\n          e.preventDefault();\r\n          let res = await GetSecureCookie(email);\r\n          setCookie(\"secure-sensors-cookie\", \"cookie is set\", 30);\r\n          window.location.replace(\"/\");\r\n        }}\r\n      >\r\n        <div style={{ fontWeight: 600, marginBottom: 20 }}>Enter your email</div>\r\n        <div>\r\n          <input\r\n            required\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => {\r\n              e.persist();\r\n              setEmail(e.target.value);\r\n            }}\r\n            style={{\r\n              padding: 10,\r\n              borderRadius: 11,\r\n              outline: 0,\r\n              border: \"1px solid black\",\r\n              marginBottom: 10,\r\n            }}\r\n          ></input>\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          style={{\r\n            background: \"#3b3be6\",\r\n            color: \"white\",\r\n            cursor: \"pointer\",\r\n            display: \"inline-block\",\r\n            padding: \"10px 40px\",\r\n            borderRadius: 11,\r\n            outline: 0,\r\n            border: \"none\",\r\n          }}\r\n        >\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RequestEmailForm;\r\n","C:\\Users\\rromi\\sensors-data\\src\\api\\index.js",[],"C:\\Users\\rromi\\sensors-data\\src\\helpers\\index.js",["61","62"],"export function setCookie(name, value, days) {\r\n  var expires = \"\";\r\n  if (days) {\r\n    var date = new Date();\r\n    date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\r\n    expires = \"; expires=\" + date.toUTCString();\r\n  }\r\n  document.cookie = name + \"=\" + (value || \"\") + expires + \"; path=/\";\r\n}\r\nexport function getCookie(name) {\r\n  var nameEQ = name + \"=\";\r\n  var ca = document.cookie.split(\";\");\r\n  for (var i = 0; i < ca.length; i++) {\r\n    var c = ca[i];\r\n    while (c.charAt(0) == \" \") c = c.substring(1, c.length);\r\n    if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\r\n  }\r\n  return null;\r\n}\r\n","C:\\Users\\rromi\\sensors-data\\src\\components\\Sensor\\Chart\\sandbox.js",[],"C:\\Users\\rromi\\sensors-data\\src\\components\\Loader\\index.js",[],{"ruleId":"63","severity":1,"message":"64","line":52,"column":7,"nodeType":"65","endLine":58,"endColumn":8},{"ruleId":"66","severity":1,"message":"67","line":98,"column":7,"nodeType":"68","endLine":98,"endColumn":48},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":5,"column":9,"nodeType":"75","messageId":"76","endLine":5,"endColumn":17},{"ruleId":"77","severity":1,"message":"78","line":8,"column":42,"nodeType":"79","messageId":"80","endLine":8,"endColumn":43},{"ruleId":"81","severity":1,"message":"82","line":20,"column":6,"nodeType":"83","endLine":20,"endColumn":15,"suggestions":"84"},{"ruleId":"81","severity":1,"message":"85","line":30,"column":6,"nodeType":"83","endLine":30,"endColumn":8,"suggestions":"86"},{"ruleId":"63","severity":1,"message":"64","line":80,"column":9,"nodeType":"65","endLine":80,"endColumn":30},{"ruleId":"73","severity":1,"message":"87","line":28,"column":15,"nodeType":"75","messageId":"76","endLine":28,"endColumn":18},{"ruleId":"88","severity":1,"message":"89","line":15,"column":24,"nodeType":"90","messageId":"80","endLine":15,"endColumn":26},{"ruleId":"88","severity":1,"message":"89","line":16,"column":27,"nodeType":"90","messageId":"80","endLine":16,"endColumn":29},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/style-prop-object","Style prop value must be an object","JSXAttribute","no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'interval' is assigned a value but never used.","Identifier","unusedVar","no-dupe-keys","Duplicate key 'x'.","ObjectExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["93"],"React Hook useEffect has missing dependencies: 'id' and 'range'. Either include them or remove the dependency array.",["94"],"'res' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},"Update the dependencies array to be: [id, refresh]",{"range":"99","text":"100"},"Update the dependencies array to be: [id, range]",{"range":"101","text":"102"},[630,639],"[id, refresh]",[809,811],"[id, range]"]