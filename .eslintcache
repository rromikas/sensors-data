[{"C:\\Users\\rromi\\sensors-data\\src\\index.js":"1","C:\\Users\\rromi\\sensors-data\\src\\App.js":"2","C:\\Users\\rromi\\sensors-data\\src\\components\\Map\\index.js":"3","C:\\Users\\rromi\\sensors-data\\src\\components\\Sensor\\index.js":"4","C:\\Users\\rromi\\sensors-data\\src\\components\\Sensor\\Chart\\index.js":"5","C:\\Users\\rromi\\sensors-data\\src\\components\\SensorsPanel\\index.js":"6","C:\\Users\\rromi\\sensors-data\\src\\components\\RequestEmailForm\\index.js":"7","C:\\Users\\rromi\\sensors-data\\src\\api\\index.js":"8","C:\\Users\\rromi\\sensors-data\\src\\helpers\\index.js":"9","C:\\Users\\rromi\\sensors-data\\src\\components\\Sensor\\Chart\\sandbox.js":"10","C:\\Users\\rromi\\sensors-data\\src\\components\\Loader\\index.js":"11","C:\\Users\\rromi\\sensors-data\\src\\components\\Sensor\\Figure\\index.js":"12","C:\\Users\\rromi\\sensors-data\\src\\components\\App\\index.js":"13","C:\\Users\\rromi\\sensors-data\\src\\images\\Graph.js":"14","C:\\Users\\rromi\\sensors-data\\src\\images\\Cursor.js":"15","C:\\Users\\rromi\\sensors-data\\src\\images\\Sensor.js":"16","C:\\Users\\rromi\\sensors-data\\src\\sensors\\Geolocation.js":"17","C:\\Users\\rromi\\sensors-data\\src\\sensors\\geolocation.js":"18","C:\\Users\\rromi\\sensors-data\\src\\sensors\\deviceMotion.js":"19","C:\\Users\\rromi\\sensors-data\\src\\sensors\\deviceOrientation.js":"20"},{"size":314,"mtime":1611367014504,"results":"21","hashOfConfig":"22"},{"size":1649,"mtime":1611669026130,"results":"23","hashOfConfig":"22"},{"size":1368,"mtime":1611664072428,"results":"24","hashOfConfig":"22"},{"size":2263,"mtime":1611666351251,"results":"25","hashOfConfig":"22"},{"size":1113,"mtime":1611659948524,"results":"26","hashOfConfig":"22"},{"size":10466,"mtime":1611669594613,"results":"27","hashOfConfig":"22"},{"size":2583,"mtime":1611616618366,"results":"28","hashOfConfig":"22"},{"size":726,"mtime":1611606500578,"results":"29","hashOfConfig":"22"},{"size":636,"mtime":1611531862271,"results":"30","hashOfConfig":"22"},{"size":1680,"mtime":1611668843937,"results":"31","hashOfConfig":"22"},{"size":272,"mtime":1611503847509,"results":"32","hashOfConfig":"22"},{"size":813,"mtime":1611666780261,"results":"33","hashOfConfig":"22"},{"size":3124,"mtime":1611668570626,"results":"34","hashOfConfig":"22"},{"size":616,"mtime":1611521354849,"results":"35","hashOfConfig":"22"},{"size":709,"mtime":1611534163203,"results":"36","hashOfConfig":"22"},{"size":2363,"mtime":1611613504968,"results":"37","hashOfConfig":"22"},{"size":800,"mtime":1611620290365,"results":"38","hashOfConfig":"22"},{"size":875,"mtime":1611668289780,"results":"39","hashOfConfig":"22"},{"size":729,"mtime":1611619862712,"results":"40","hashOfConfig":"22"},{"size":197,"mtime":1611620099560,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"vczyyt",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\rromi\\sensors-data\\src\\index.js",[],["85","86"],"C:\\Users\\rromi\\sensors-data\\src\\App.js",[],"C:\\Users\\rromi\\sensors-data\\src\\components\\Map\\index.js",["87"],"import React, { useEffect } from \"react\";\r\nimport ReactMapboxGl, { Marker } from \"react-mapbox-gl\";\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\nimport { withTheme } from \"styled-components\";\r\nimport { getCookie } from \"helpers\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Map = ReactMapboxGl({\r\n  accessToken: process.env.REACT_APP_MAP_ACCESS_TOKEN,\r\n});\r\n\r\nconst UserMarker = ({ color }) => {\r\n  return (\r\n    <div\r\n      className=\"pulsating-circle\"\r\n      style={{\r\n        pointerEvents: \"none\",\r\n        width: 30,\r\n        height: 30,\r\n        borderRadius: \"50%\",\r\n        border: \"4px solid white\",\r\n        background: color,\r\n        boxShadow: `0 0 0 1px ${color}`,\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nconst Component = ({ onReady, theme, userLocation }) => {\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (!getCookie(\"secure-sensors-cookie\")) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history]);\r\n  return (\r\n    <Map\r\n      onStyleLoad={onReady}\r\n      style=\"mapbox://styles/mapbox/streets-v9\"\r\n      center={userLocation}\r\n      containerStyle={{\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <Marker coordinates={userLocation} style={{ pointerEvents: \"none\" }}>\r\n        <UserMarker color={theme.danger}></UserMarker>\r\n      </Marker>\r\n    </Map>\r\n  );\r\n};\r\n\r\nexport default withTheme(Component);\r\n","C:\\Users\\rromi\\sensors-data\\src\\components\\Sensor\\index.js",["88"],"import React from \"react\";\r\nimport RealTimeChart from \"./Chart\";\r\nimport Figure from \"./Figure\";\r\nimport styled, { withTheme } from \"styled-components\";\r\n\r\nconst Title = styled.div`\r\n  font-weight: bold;\r\n  font-size: 24px;\r\n  line-height: 24px;\r\n  color: ${(props) => props.theme.main};\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst colors = [\r\n  \"deeppink\",\r\n  \"deepskyblue\",\r\n  \"rebeccapurple\",\r\n  \"chocolate\",\r\n  \"orange\",\r\n  \"seagreen\",\r\n  \"slateblue\",\r\n  \"lawngreen\",\r\n];\r\n\r\nconst markStyle = (color) => {\r\n  return { width: 20, height: 7, borderRadius: 5, background: color, marginRight: 5 };\r\n};\r\n\r\nconst Sensor = ({\r\n  value,\r\n  characterValue,\r\n  characterValueLabels,\r\n  subject,\r\n  units,\r\n  range,\r\n  sendSensorData,\r\n  id,\r\n  graphView,\r\n  labels = [\"X-axis\", \"Y-axis\", \"Z-axis\"],\r\n  active,\r\n  keys,\r\n  theme,\r\n}) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        boxSizing: \"border-box\",\r\n        background: \"white\",\r\n        padding: \"1.5rem\",\r\n        borderRadius: \"8px\",\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <Title>{subject}</Title>\r\n      {graphView && (\r\n        <div style={{ display: \"flex\", marginBottom: 15, marginTop: 25, flexWrap: \"wrap\" }}>\r\n          {keys.map((x, i) => (\r\n            <div\r\n              key={`${subject}-chart-label-${i}`}\r\n              style={{ display: \"flex\", alignItems: \"center\", marginRight: 5, marginBottom: 5 }}\r\n            >\r\n              <div style={markStyle(theme.chartColors[i])}></div>\r\n              <div style={{ marginRight: 4, lineHeight: \"14px\" }}>{x}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {graphView ? (\r\n        <RealTimeChart\r\n          id={id}\r\n          sendSensorData={sendSensorData}\r\n          value={value}\r\n          range={range}\r\n          subject={subject}\r\n          active={active}\r\n          keys={keys}\r\n          theme={theme}\r\n        ></RealTimeChart>\r\n      ) : (\r\n        <Figure value={value} labels={labels} units={units} subject={subject}></Figure>\r\n      )}\r\n      {characterValue && (\r\n        <Figure\r\n          characterValue\r\n          value={characterValue}\r\n          labels={characterValueLabels}\r\n          subject={subject}\r\n        ></Figure>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withTheme(Sensor);\r\n","C:\\Users\\rromi\\sensors-data\\src\\components\\Sensor\\Chart\\index.js",[],"C:\\Users\\rromi\\sensors-data\\src\\components\\SensorsPanel\\index.js",["89","90","91","92","93","94"],"C:\\Users\\rromi\\sensors-data\\src\\components\\RequestEmailForm\\index.js",[],"C:\\Users\\rromi\\sensors-data\\src\\api\\index.js",[],"C:\\Users\\rromi\\sensors-data\\src\\helpers\\index.js",[],"C:\\Users\\rromi\\sensors-data\\src\\components\\Sensor\\Chart\\sandbox.js",[],"C:\\Users\\rromi\\sensors-data\\src\\components\\Loader\\index.js",[],"C:\\Users\\rromi\\sensors-data\\src\\components\\Sensor\\Figure\\index.js",[],"C:\\Users\\rromi\\sensors-data\\src\\components\\App\\index.js",[],"C:\\Users\\rromi\\sensors-data\\src\\images\\Graph.js",[],"C:\\Users\\rromi\\sensors-data\\src\\images\\Cursor.js",[],"C:\\Users\\rromi\\sensors-data\\src\\images\\Sensor.js",[],"C:\\Users\\rromi\\sensors-data\\src\\sensors\\Geolocation.js",[],"C:\\Users\\rromi\\sensors-data\\src\\sensors\\geolocation.js",[],"C:\\Users\\rromi\\sensors-data\\src\\sensors\\deviceMotion.js",[],"C:\\Users\\rromi\\sensors-data\\src\\sensors\\deviceOrientation.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":39,"column":7,"nodeType":"101","endLine":39,"endColumn":48},{"ruleId":"102","severity":1,"message":"103","line":14,"column":7,"nodeType":"104","messageId":"105","endLine":14,"endColumn":13},{"ruleId":"106","severity":1,"message":"107","line":40,"column":6,"nodeType":"108","endLine":40,"endColumn":8,"suggestions":"109"},{"ruleId":"106","severity":1,"message":"110","line":85,"column":5,"nodeType":"108","endLine":85,"endColumn":21,"suggestions":"111"},{"ruleId":"106","severity":1,"message":"112","line":92,"column":5,"nodeType":"108","endLine":92,"endColumn":26,"suggestions":"113"},{"ruleId":"106","severity":1,"message":"114","line":163,"column":6,"nodeType":"108","endLine":163,"endColumn":59,"suggestions":"115"},{"ruleId":"106","severity":1,"message":"116","line":172,"column":6,"nodeType":"108","endLine":172,"endColumn":43,"suggestions":"117"},{"ruleId":"106","severity":1,"message":"118","line":213,"column":6,"nodeType":"108","endLine":213,"endColumn":15,"suggestions":"119"},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"react/style-prop-object","Style prop value must be an object","JSXAttribute","no-unused-vars","'colors' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'sensorsButtonRenderedOnce' and 'setSensorsButtonRenderedOnce'. Either include them or remove the dependency array. If 'setSensorsButtonRenderedOnce' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["122"],"React Hook useCallback has an unnecessary dependency: 'onDeviceMotion'. Either exclude it or remove the dependency array. Outer scope values like 'onDeviceMotion' aren't valid dependencies because mutating them doesn't re-render the component.",["123"],"React Hook useCallback has an unnecessary dependency: 'onDeviceOrientation'. Either exclude it or remove the dependency array. Outer scope values like 'onDeviceOrientation' aren't valid dependencies because mutating them doesn't re-render the component.",["124"],"React Hook useCallback has a missing dependency: 'setSensorsOn'. Either include it or remove the dependency array. If 'setSensorsOn' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["125"],"React Hook useCallback has missing dependencies: 'onDeviceMotionAssigned', 'onDeviceOrientationAssigned', and 'setSensorsOn'. Either include them or remove the dependency array. Outer scope values like 'onDeviceOrientation' aren't valid dependencies because mutating them doesn't re-render the component.",["126"],"React Hook useEffect has a missing dependency: 'timeGapBetweenLocationFetch'. Either include it or remove the dependency array.",["127"],"no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"130","fix":"132"},{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},"Update the dependencies array to be: [sensorsButtonRenderedOnce, setSensorsButtonRenderedOnce]",{"range":"139","text":"140"},"Update the dependencies array to be: []",{"range":"141","text":"142"},{"range":"143","text":"142"},"Update the dependencies array to be: [onDeviceMotionAssigned, onDeviceOrientationAssigned, setSensorsOn]",{"range":"144","text":"145"},"Update the dependencies array to be: [onDeviceOrientationAssigned, onDeviceMotionAssigned, setSensorsOn]",{"range":"146","text":"147"},"Update the dependencies array to be: [geoData, timeGapBetweenLocationFetch]",{"range":"148","text":"149"},[1284,1286],"[sensorsButtonRenderedOnce, setSensorsButtonRenderedOnce]",[2690,2706],"[]",[2845,2866],[5321,5374],"[onDeviceMotionAssigned, onDeviceOrientationAssigned, setSensorsOn]",[5714,5751],"[onDeviceOrientationAssigned, onDeviceMotionAssigned, setSensorsOn]",[7226,7235],"[geoData, timeGapBetweenLocationFetch]"]