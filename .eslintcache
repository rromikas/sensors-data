[{"C:\\Users\\rromi\\sensors-data\\src\\index.js":"1","C:\\Users\\rromi\\sensors-data\\src\\App.js":"2","C:\\Users\\rromi\\sensors-data\\src\\components\\Map\\index.js":"3","C:\\Users\\rromi\\sensors-data\\src\\components\\Sensor\\index.js":"4","C:\\Users\\rromi\\sensors-data\\src\\components\\Sensor\\Chart\\index.js":"5","C:\\Users\\rromi\\sensors-data\\src\\components\\SensorsPanel\\index.js":"6","C:\\Users\\rromi\\sensors-data\\src\\components\\RequestEmailForm\\index.js":"7","C:\\Users\\rromi\\sensors-data\\src\\api\\index.js":"8","C:\\Users\\rromi\\sensors-data\\src\\helpers\\index.js":"9"},{"size":219,"mtime":1611250168600,"results":"10","hashOfConfig":"11"},{"size":561,"mtime":1611264443752,"results":"12","hashOfConfig":"11"},{"size":2787,"mtime":1611257787887,"results":"13","hashOfConfig":"11"},{"size":1559,"mtime":1611246336246,"results":"14","hashOfConfig":"11"},{"size":1320,"mtime":1611250631879,"results":"15","hashOfConfig":"11"},{"size":4528,"mtime":1611250162743,"results":"16","hashOfConfig":"11"},{"size":1882,"mtime":1611264532253,"results":"17","hashOfConfig":"11"},{"size":726,"mtime":1611264397755,"results":"18","hashOfConfig":"11"},{"size":634,"mtime":1611263867242,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"vczyyt",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"C:\\Users\\rromi\\sensors-data\\src\\index.js",[],["43","44"],"C:\\Users\\rromi\\sensors-data\\src\\App.js",["45","46"],"C:\\Users\\rromi\\sensors-data\\src\\components\\Map\\index.js",["47","48"],"import React, { useEffect, useState } from \"react\";\r\nimport ReactMapboxGl, { Marker } from \"react-mapbox-gl\";\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\nimport CenterIcon from \"./center.svg\";\r\n\r\nconst Map = ReactMapboxGl({\r\n  accessToken:\r\n    \"pk.eyJ1Ijoicm9taWthcyIsImEiOiJjazg0b2ZrOWcwc25mM29xdHFlMHdwenpsIn0.EpdSDBQASiP_K00nvaMMRA\",\r\n});\r\n\r\nfunction onLocationSuccess(position, setUserLocation) {\r\n  const latitude = position.coords.latitude;\r\n  const longitude = position.coords.longitude;\r\n  setUserLocation([longitude, latitude]);\r\n}\r\n\r\nfunction onLocationError(er) {\r\n  alert(\"Error\" + er.message);\r\n}\r\n\r\nconst UserMarker = () => {\r\n  return (\r\n    <div\r\n      className=\"pulsating-circle\"\r\n      style={{\r\n        pointerEvents: \"none\",\r\n        width: 30,\r\n        height: 30,\r\n        borderRadius: \"50%\",\r\n        border: \"4px solid white\",\r\n        background: \"deepskyblue\",\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nconst CenteringMarker = ({ setUserLocation }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: 50,\r\n        height: 50,\r\n        background: \"white\",\r\n        position: \"fixed\",\r\n        bottom: 20,\r\n        right: 20,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        borderRadius: \"50%\",\r\n        boxShadow: \"0px 0px 5px 2px rgba(0,0,0,0.1)\",\r\n        cursor: \"pointer\",\r\n      }}\r\n    >\r\n      <img\r\n        src={CenterIcon}\r\n        onClick={() =>\r\n          setUserLocation((prev) => {\r\n            let arr = [...prev];\r\n            arr[0] = arr[0] + 0.000000001;\r\n            return arr;\r\n          })\r\n        }\r\n        style={{\r\n          width: 20,\r\n          height: 20,\r\n        }}\r\n      ></img>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Component = () => {\r\n  const [userLocation, setUserLocation] = useState([54.91284224031921, 54.91284224031921]);\r\n\r\n  useEffect(() => {\r\n    let watchId;\r\n    if (!navigator.geolocation) {\r\n      alert(\"Browser doesn't support geolocation detector\");\r\n    } else {\r\n      watchId = navigator.geolocation.watchPosition(\r\n        (position) => onLocationSuccess(position, setUserLocation),\r\n        onLocationError,\r\n        {\r\n          enableHighAccuracy: true,\r\n        }\r\n      );\r\n    }\r\n    return () => {\r\n      if (watchId) {\r\n        navigator.geolocation.clearWatch(watchId);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Map\r\n      style=\"mapbox://styles/mapbox/streets-v9\"\r\n      center={userLocation}\r\n      containerStyle={{\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <Marker coordinates={userLocation} style={{ pointerEvents: \"none\" }}>\r\n        <UserMarker></UserMarker>\r\n      </Marker>\r\n      <CenteringMarker setUserLocation={setUserLocation}></CenteringMarker>\r\n    </Map>\r\n  );\r\n};\r\n\r\nexport default Component;\r\n","C:\\Users\\rromi\\sensors-data\\src\\components\\Sensor\\index.js",[],"C:\\Users\\rromi\\sensors-data\\src\\components\\Sensor\\Chart\\index.js",["49","50"],"import {\r\n  LineChart,\r\n  Line,\r\n  CartesianGrid,\r\n  XAxis,\r\n  YAxis,\r\n  ResponsiveContainer,\r\n  Legend,\r\n} from \"recharts\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst RealTimeChart = ({ value, range }) => {\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setData((prev) => {\r\n        let arr = [...prev];\r\n        if (arr.length == 10) {\r\n          arr.splice(arr.length - 1, 1);\r\n        }\r\n        return [value, ...arr];\r\n      });\r\n    }, 1);\r\n\r\n    return () => clearTimeout(timeout);\r\n  }, [data]);\r\n\r\n  return (\r\n    <ResponsiveContainer width={\"100%\"} height={140}>\r\n      <LineChart data={data}>\r\n        <Line isAnimationActive={false} type=\"monotone\" dataKey=\"x\" stroke=\"#B20D30\" />\r\n        <Line isAnimationActive={false} type=\"monotone\" dataKey=\"y\" stroke=\"#3F84E5\" />\r\n        <Line isAnimationActive={false} type=\"monotone\" dataKey=\"z\" stroke=\"#E59124\" />\r\n        <CartesianGrid stroke=\"#ccc\" />\r\n        <XAxis /> <YAxis domain={range} />\r\n        <Legend\r\n          verticalAlign=\"top\"\r\n          height={36}\r\n          align=\"right\"\r\n          wrapperStyle={{ height: 0, top: -30, right: -10, textAlign: \"right\" }}\r\n        />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default RealTimeChart;\r\n","C:\\Users\\rromi\\sensors-data\\src\\components\\SensorsPanel\\index.js",["51"],"import React, { useEffect, useState } from \"react\";\r\nimport Sensor from \"../Sensor\";\r\nimport GraphIcon from \"./graph.svg\";\r\n\r\nconst SensorsPanel = () => {\r\n  const [showGraphs, setShowGraphs] = useState(true);\r\n  const [orientation, setOrientation] = useState({ alpha: 0, beta: 0, gamma: 0 });\r\n  const [acceleration, setAcceleration] = useState({ x: 0, y: 0, z: 0 });\r\n  const [accelerationIncludingGravity, setAccelerationIncludingGravity] = useState({\r\n    x: 0,\r\n    y: 0,\r\n    z: 0,\r\n  });\r\n  const [rotationRate, setRotationRate] = useState({ alpha: 0, beta: 0, gamma: 0 });\r\n  useEffect(() => {\r\n    const onDeviceMotion = (e) => {\r\n      setAcceleration((prev) =>\r\n        Object.assign({}, prev, {\r\n          x: e.acceleration.x || 0,\r\n          y: e.acceleration.y || 0,\r\n          z: e.acceleration.z || 0,\r\n        })\r\n      );\r\n      setAccelerationIncludingGravity((prev) =>\r\n        Object.assign({}, prev, {\r\n          x: e.accelerationIncludingGravity.x || 0,\r\n          y: e.accelerationIncludingGravity.y || 0,\r\n          z: e.accelerationIncludingGravity.z || 0,\r\n        })\r\n      );\r\n      setRotationRate((prev) =>\r\n        Object.assign({}, prev, {\r\n          alpha: e.rotationRate.alpha || 0,\r\n          beta: e.rotationRate.beta || 0,\r\n          gamma: e.rotationRate.gamma || 0,\r\n        })\r\n      );\r\n    };\r\n\r\n    const onDeviceOrientation = (e) => {\r\n      setOrientation((prev) =>\r\n        Object.assign({}, prev, { alpha: e.alpha || 0, beta: e.beta || 0, gamma: e.gamma || 0 })\r\n      );\r\n    };\r\n\r\n    if (showGraphs) {\r\n      window.addEventListener(\"devicemotion\", onDeviceMotion, true);\r\n      window.addEventListener(\"deviceorientation\", onDeviceOrientation, true);\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener(\"devicemotion\", onDeviceMotion);\r\n      window.removeEventListener(\"deviceorientation\", onDeviceOrientation);\r\n    };\r\n  }, [showGraphs]);\r\n  return (\r\n    <>\r\n      <div\r\n        onClick={() => setShowGraphs(!showGraphs)}\r\n        className=\"user-select-none\"\r\n        style={{\r\n          position: \"fixed\",\r\n          zIndex: 100,\r\n          top: 5,\r\n          left: 0,\r\n          height: 42,\r\n          width: 100,\r\n          borderRadius: \"0 25px 25px 0\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          background: \"white\",\r\n          cursor: \"pointer\",\r\n          boxShadow: \"0px 0px 5px 2px rgba(0,0,0,0.1)\",\r\n        }}\r\n      >\r\n        <img src={GraphIcon}></img>\r\n      </div>\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          pointerEvents: showGraphs ? \"all\" : \"none\",\r\n          transform: `translateX(${showGraphs ? 0 : \"-100%\"})`,\r\n          left: 0,\r\n          top: 0,\r\n          zIndex: \"99\",\r\n          width: \"100%\",\r\n          maxHeight: \"100%\",\r\n          overflow: \"auto\",\r\n          display: \"flex\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            paddingTop: 40,\r\n            boxSizing: \"border-box\",\r\n            borderRadius: \"8px\",\r\n            width: \"100%\",\r\n            zIndex: 99,\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            padding: \"50px 10px 10px 10px\",\r\n          }}\r\n        >\r\n          <div style={{ padding: \"10px\", maxWidth: \"500px\", width: \"100%\" }}>\r\n            <Sensor\r\n              range={[-180, 360]}\r\n              units={\"°\"}\r\n              subject=\"Orientation\"\r\n              value={{ x: orientation.beta, y: orientation.gamma, z: orientation.alpha }}\r\n            ></Sensor>\r\n          </div>\r\n          <div style={{ padding: \"10px\", maxWidth: \"500px\", width: \"100%\" }}>\r\n            <Sensor\r\n              range={[-15, 15]}\r\n              subject=\"Accelerometer\"\r\n              value={acceleration}\r\n              units=\"m/s²\"\r\n            ></Sensor>\r\n          </div>\r\n          <div style={{ padding: \"10px\", maxWidth: \"500px\", width: \"100%\" }}>\r\n            <Sensor\r\n              range={[-30, 30]}\r\n              subject=\"Accelerometer including gravity\"\r\n              value={accelerationIncludingGravity}\r\n              units=\"m/s²\"\r\n            ></Sensor>\r\n          </div>\r\n          <div style={{ maxWidth: \"500px\", width: \"100%\", padding: \"10px\" }}>\r\n            <Sensor\r\n              range={[-200, 200]}\r\n              subject=\"Gyroscope\"\r\n              value={{ x: rotationRate.beta, y: rotationRate.gamma, z: rotationRate.alpha }}\r\n            ></Sensor>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SensorsPanel;\r\n","C:\\Users\\rromi\\sensors-data\\src\\components\\RequestEmailForm\\index.js",["52"],"C:\\Users\\rromi\\sensors-data\\src\\api\\index.js",[],"C:\\Users\\rromi\\sensors-data\\src\\helpers\\index.js",["53","54"],"export function setCookie(name, value, days) {\r\n  var expires = \"\";\r\n  if (days) {\r\n    var date = new Date();\r\n    date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\r\n    expires = \"; expires=\" + date.toUTCString();\r\n  }\r\n  document.cookie = name + \"=\" + (value || \"\") + expires + \"; path=/\";\r\n}\r\nexport function getCookie(name) {\r\n  var nameEQ = name + \"=\";\r\n  var ca = document.cookie.split(\";\");\r\n  for (var i = 0; i < ca.length; i++) {\r\n    var c = ca[i];\r\n    while (c.charAt(0) == \" \") c = c.substring(1, c.length);\r\n    if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\r\n  }\r\n  return null;\r\n}\r\n",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":26},{"ruleId":"59","severity":1,"message":"63","line":5,"column":21,"nodeType":"61","messageId":"62","endLine":5,"endColumn":30},{"ruleId":"64","severity":1,"message":"65","line":55,"column":7,"nodeType":"66","endLine":68,"endColumn":8},{"ruleId":"67","severity":1,"message":"68","line":98,"column":7,"nodeType":"69","endLine":98,"endColumn":48},{"ruleId":"70","severity":1,"message":"71","line":18,"column":24,"nodeType":"72","messageId":"73","endLine":18,"endColumn":26},{"ruleId":"74","severity":1,"message":"75","line":26,"column":6,"nodeType":"76","endLine":26,"endColumn":12,"suggestions":"77"},{"ruleId":"64","severity":1,"message":"65","line":77,"column":9,"nodeType":"66","endLine":77,"endColumn":30},{"ruleId":"59","severity":1,"message":"78","line":28,"column":15,"nodeType":"61","messageId":"62","endLine":28,"endColumn":18},{"ruleId":"70","severity":1,"message":"71","line":15,"column":24,"nodeType":"72","messageId":"73","endLine":15,"endColumn":26},{"ruleId":"70","severity":1,"message":"71","line":16,"column":27,"nodeType":"72","messageId":"73","endLine":16,"endColumn":29},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setCookie' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/style-prop-object","Style prop value must be an object","JSXAttribute","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'value'. Either include it or remove the dependency array. If 'setData' needs the current value of 'value', you can also switch to useReducer instead of useState and read 'value' in the reducer.","ArrayExpression",["81"],"'res' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},"Update the dependencies array to be: [data, value]",{"range":"84","text":"85"},[577,583],"[data, value]"]